{"version":3,"sources":["chartjs.js"],"names":["ready","fn","document","readyState","addEventListener","window","ftfHelpers","isMobile","a","check","navigator","userAgent","vendor","opera","test","substr","sortUnique","arr","sort","filter","el","i","indexOf","hex","opacity","replace","sorted","substring","parseInt","pSBC","p","c0","c1","l","r","h","m","Math","this","pSBCr","d","n","length","x","convertHex","b","slice","g","parseFloat","f","P","t","result","pow","toString","undefined","invertColor","bw","round","padZero","str","len","Array","join","renderChart","chartEl","chartOptions","config","eval","dataset","err","log","chartData","datavizType","type","sourceId","chartLabels","JSON","parse","stringify","ftfDataviz","data_labels_raw","data_series_raw","data_labels","data_series","data_labels_sorted","data_series_sorted","ignoreNull","forEach","datapoints","indexOuter","datapoint","indexInner","removeDatapoint","item","limit","suffix","label","axis_label_values","dataArray","push","index","prefix","colorPalettes","colorScheme","backgroundColor","dataRows","fill","_loop","columnFilter","datasets","data","map","labels","axesLabels","axis_label_title","ticks","beginAtZero","axesValues","scaleLabel","labelString","logScale","autoSkip","maxTicksLimit","userCallback","value","toLocaleString","chartObj","dataValues","concat","apply","v","floor","splice","_chartObj$ticks","_toConsumableArray","isAdmin","display","options","scales","yAxes","tooltips","callbacks","tooltipItem","xLabel","xAxes","title","datasetIndex","yLabel","responsive","hoverBorderWidth","hoverBorderColor","borderWidth","selectedColorScheme","Object","keys","color","borderColor","labelY","labelX","position","stepSize","minorTickInterval","legend","Date","y","getDate","toLocaleDateString","language","day","month","year","showGridlines","xAxis","drawBorder","yAxis","drawOnChartArea","querySelector","setAttribute","svgBorder","style","fontSize","height","newChart","Chart","clearActive","activate","activateNext","activatePrev","selectedIndex","meta","controller","removeHoverStyle","setHoverStyle","render","getDatasetMeta","e","key","wpAdmin","getElementsByClassName","charts","_step","_iterator","_createForOfIteratorHelper","querySelectorAll","s","done","ev","dataVizEl","target","closest","innerHTML","mapData","dataIndex","min","dataRow","parentElement","textContent"],"mappings":"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","file":"chartjs.min.js","sourcesContent":["'use strict';\n\nfunction ready( fn ) {\n    if ( document.readyState != 'loading' ){\n        fn();\n    } else {\n        document.addEventListener( 'DOMContentLoaded', fn );\n    }\n}\n\nwindow.ftfHelpers = window.ftfHelpers || {};\n\nwindow.ftfHelpers.isMobile = function(){\n    var check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n    return check;\n}\n\nwindow.ftfHelpers.sortUnique = function( arr ){\n    var sorted = arr;\n\n    // var cnts = sorted.reduce( function (obj, val) {\n    //     obj[val] = (obj[val] || 0) + 1;\n    //     return obj;\n    // }, {} );\n\n    // var sorted = Object.keys(cnts).sort( function(a,b) {\n    //     return cnts[b] - cnts[a];\n    // });\n\n    return sorted.sort().filter(function(el,i,a){return i===a.indexOf(el)})\n    // return sorted;\n}\n\nwindow.ftfHelpers.convertHex = function( hex, opacity ){\n    /* https://gist.github.com/danieliser/b4b24c9f772066bcf0a6 */\n    if (!hex){\n        hex = '#000000';\n    }\n\n    hex = hex.replace( '#','' );\n\n    let r, g, b;\n\n    r = parseInt( hex.substring( 0,2 ), 16 );\n    g = parseInt( hex.substring( 2,4 ), 16 );\n    b = parseInt( hex.substring( 4,6 ), 16 );\n\n    let result = 'rgba(' + r + ',' + g + ',' + b + ',' + opacity / 100 + ')';\n    return result;\n}\n\nwindow.ftfHelpers.pSBC = function(p,c0,c1,l){\n    let r,g,b,P,f,t,h,i=parseInt,m=Math.round,a=typeof(c1)==\"string\";\n    if(typeof(p)!=\"number\"||p<-1||p>1||typeof(c0)!=\"string\"||(c0[0]!='r'&&c0[0]!='#')||(c1&&!a))return null;\n    if(!this.pSBCr)this.pSBCr=(d)=>{\n        let n=d.length,x={};\n        if(n>9){\n            [r,g,b,a]=d=d.split(\",\"),n=d.length;\n            if(n<3||n>4)return null;\n            x.r=i(r[3]==\"a\"?r.slice(5):r.slice(4)),x.g=i(g),x.b=i(b),x.a=a?parseFloat(a):-1\n        }else{\n            if(n==8||n==6||n<4)return null;\n            if(n<6)d=\"#\"+d[1]+d[1]+d[2]+d[2]+d[3]+d[3]+(n>4?d[4]+d[4]:\"\");\n            d=i(d.slice(1),16);\n            if(n==9||n==5)x.r=d>>24&255,x.g=d>>16&255,x.b=d>>8&255,x.a=m((d&255)/0.255)/1000;\n            else x.r=d>>16,x.g=d>>8&255,x.b=d&255,x.a=-1\n        }return x};\n    h=c0.length>9,h=a?c1.length>9?true:c1==\"c\"?!h:false:h,f=this.pSBCr(c0),P=p<0,t=c1&&c1!=\"c\"?this.pSBCr(c1):P?{r:0,g:0,b:0,a:-1}:{r:255,g:255,b:255,a:-1},p=P?p*-1:p,P=1-p;\n    if(!f||!t)return null;\n    if(l)r=m(P*f.r+p*t.r),g=m(P*f.g+p*t.g),b=m(P*f.b+p*t.b);\n    else r=m((P*f.r**2+p*t.r**2)**0.5),g=m((P*f.g**2+p*t.g**2)**0.5),b=m((P*f.b**2+p*t.b**2)**0.5);\n    a=f.a,t=t.a,f=a>=0||t>=0,a=f?a<0?t:t<0?a:a*P+t*p:0;\n    if(h)return\"rgb\"+(f?\"a(\":\"(\")+r+\",\"+g+\",\"+b+(f?\",\"+m(a*1000)/1000:\"\")+\")\";\n    else return\"#\"+(4294967296+r*16777216+g*65536+b*256+(f?m(a*255):0)).toString(16).slice(1,f?undefined:-2)\n}\n\nwindow.ftfHelpers.invertColor = function( hex, bw ) {\n    if ( !hex ){\n        return null;\n    }\n    if ( hex.indexOf( '#' ) === 0 ) {\n        hex = hex.slice( 1 );\n    }\n\n    if ( hex.length === 3 ) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\n        g = parseInt( hex.slice( 2, 4 ), 16 ),\n        b = parseInt( hex.slice( 4, 6 ), 16 );\n\n    if ( bw ) {\n        return ( r * 0.299 + g * 0.587 + b * 0.114 ) > 186\n            ? '#000000'\n            : '#FFFFFF';\n    }\n\n    r = ( 255 - r ).toString( 16 );\n    g = ( 255 - g ).toString( 16 );\n    b = ( 255 - b ).toString( 16 );\n\n    return '#' + ftfHelpers.padZero( r ) + ftfHelpers.padZero( g ) + ftfHelpers.padZero( b );\n}\n\nwindow.ftfHelpers.padZero = function( str, len ) {\n    len = len || 2;\n    var zeros = new Array( len ).join( '0' );\n    return ( zeros + str ).slice( -len );\n}\n\nwindow.ftfHelpers.renderChart = function( chartEl ){\n    if ( !chartEl ){ return false; }\n\n    let chartOptions = {};\n\n    if ( chartEl.dataset.config ){\n        try{\n            // chartOptions = JSON.parse( chartEl.dataset.config );\n            chartOptions = eval( '(' + chartEl.dataset.config + ')' );\n        } catch( err ){ console.log( err ) /* noop */ }\n    } else{\n        let colorSchemeIndex = 3;\n        let datavizType = chartEl.dataset.type || 'bar';\n\n        let chartLabels, chartData;\n        if ( chartEl.dataset.sourceId ){\n            if ( datavizType === 'scatter' ){\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_raw ) );\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series_raw ) );\n            }\n            else if ( datavizType === 'scatter-dates' ){\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_raw ) );\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series_raw ) );\n            }\n            else if ( chartEl.dataset.sort && ( chartEl.dataset.sort === 'true' || chartEl.dataset.sort == 1 ) ){\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_sorted ) );\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series_sorted ) );\n            } else {\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels ) );\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series ) );\n            }            \n        }\n\n        if ( chartEl.dataset.ignoreNull && chartEl.dataset.ignoreNull === 'true' ){\n\n            chartData.forEach( function( datapoints, indexOuter ){\n                let removeDatapoint = true;\n\n                datapoints.forEach( function( datapoint, indexInner ){\n                    if ( chartData[indexOuter][indexInner] && parseInt( chartData[indexOuter][indexInner] ) !== 0 ){\n                        removeDatapoint = false;\n                    }\n                } );\n\n                if ( removeDatapoint ){\n                    delete chartData[indexOuter];\n                    delete chartLabels[indexOuter];\n                }\n            } );\n\n            chartData = chartData.filter( function ( item ){ return item != undefined } );\n            chartLabels = chartLabels.filter( function ( item ){ return item != undefined } );\n        }\n\n\n        if ( chartEl.dataset.sort && ( chartEl.dataset.sort === 'true' || chartEl.dataset.sort == 1 ) && chartEl.dataset.limit ){\n            chartLabels = chartLabels.slice( 0, chartEl.dataset.limit );\n            chartData = chartData.slice( 0, chartEl.dataset.limit );\n        }\n\n        if ( chartData && chartData.length > 3 ){\n            colorSchemeIndex = chartData.length;\n        }\n\n        const dataRows = chartData ? chartData[0].length : 0;\n        let datasets = [];\n\n        for( let i = 0; i < dataRows; i++ ){\n            let dataArray = [];\n            let label = '';\n\n            chartData.forEach( function( data, index ){\n                if ( chartEl.dataset.sourceId ){\n                    label = window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_values[i];                    \n                }\n\n                // const label = chartData[i][index];\n                dataArray.push( chartData[index][i] );\n            } );\n\n            let dataset = {\n                label: label,\n                data: dataArray,\n                __custom_meta: {\n                    prefix: chartEl.dataset.prefix,\n                    suffix: chartEl.dataset.suffix\n                }\n            };\n\n            if ( chartEl.dataset.colorScheme ){\n                if ( chartEl.dataset.colorScheme && ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ){\n                    if ( [ 'bar', 'horizontalBar' ].indexOf( datavizType ) !== -1 ){\n                        dataset.backgroundColor = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][i];\n                    } else if ( datavizType === 'line' ){\n                        dataset.borderColor = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][i];\n                        dataset.fill = false;\n                    }\n                }\n\n            }\n\n            datasets.push( dataset );\n        }\n\n        if ( chartEl.dataset.columnFilter && chartEl.dataset.columnFilter === 'true' ){\n            for ( let i = 1; i < datasets.length; i++ ){\n                let selectHtml = `<label>${datasets[i].label}\n                    <select name=\"ftf-dataviz-filter-${ chartEl.dataset.sourceId }\" id=\"ftf-dataviz-filter-${ chartEl.dataset.sourceId }\">\n                      ${\n                        datasets[i].data.map( function( data ){\n                            return `<option value=\"option\">option</option>`;\n                        } )\n                      }\n                    </select>\n                </label>`; \n            }\n        \n            datasets = [datasets[0]];\n        }\n\n        chartOptions = {\n            type: datavizType,\n            data: {\n                labels: chartLabels,\n                datasets: datasets\n            },\n            options: {}\n        };\n\n        let axesLabels, axesValues;\n\n        switch ( datavizType ){\n            case 'horizontalBar':\n            case 'bar':\n            case 'line':\n                axesLabels = [{\n                    scaleLabel: {\n                        display: true,\n                        // labelString: chartEl.dataset.axisLabelData\n                        labelString: chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : ''\n                    },\n                    ticks: {\n                        beginAtZero: true,\n                        // userCallback: function( value, index, values)  {\n                        //     return value.toLocaleString();\n                        // }\n                    }\n                }];\n\n                axesValues = [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: chartEl.dataset.label\n                    },\n                    type: chartEl.dataset.logScale && chartEl.dataset.logScale === '1' ? 'logarithmic' : 'linear',\n                    ticks: {\n                        beginAtZero: true,\n                        autoSkip: true,\n                        min: 0,\n                        maxTicksLimit: 10,\n                        userCallback: function( value, index, values)  {\n                            return chartEl.dataset.prefix + value.toLocaleString() + chartEl.dataset.suffix;\n                        }\n                    },\n                    afterBuildTicks: (chartObj) => {\n                        if ( chartEl.dataset.logScale && chartEl.dataset.logScale === '1' ){\n                            const dataValues = [].concat.apply( [], datasets.map( function( datapoint ){\n                                return datapoint.data;\n                            } ) ).map( function( v ){\n                                return Math.pow( 10, Math.floor( v ).toString().length - 1 );\n                            } );\n\n                            if ( ftfHelpers.isMobile() ){\n                                chartObj.ticks.splice(0, chartObj.ticks.length);\n                            }\n                            \n                            chartObj.ticks.push(...dataValues);\n                            chartObj.ticks = ftfHelpers.sortUnique( chartObj.ticks );                            \n                        }\n                    }                    \n                }];\n\n                if ( chartEl.dataset.logScale && chartData.length > 4 ){\n                    /* Temporary fix for labels overlapping when using logarithmic scale. */\n                    // axesValues[0].ticks.minRotation = 30;\n                    axesValues[0].ticks.maxTicksLimit = chartData.length * 2;\n                }\n\n                if ( ftfHelpers.isAdmin() ){\n                    // axesValues[0].ticks.maxTicksLimit = chartData.length;\n                    axesValues[0].ticks.maxTicksLimit = 4;\n                }\n\n                if ( datavizType === 'horizontalBar' ){\n                    chartOptions.options.scales = {\n                        xAxes: axesValues,\n                        yAxes: axesLabels\n                    };\n\n                    chartOptions.options.tooltips = {\n                      callbacks: {\n                        label: function( tooltipItem, data ) {\n                            return data['datasets'][0]['__custom_meta']['prefix'] + tooltipItem.xLabel.toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                        }\n                      }\n                    }\n\n                } else {\n                    chartOptions.options.scales = {\n                        xAxes: axesLabels,\n                        yAxes: axesValues\n                    };\n\n                    chartOptions.options.tooltips = {\n                      callbacks: {\n                        title: function(tooltipItem, data) {\n                            return data.datasets[tooltipItem[0].datasetIndex].label;\n                        },\n                        label: function( tooltipItem, data ) {\n                            return `${data.labels[tooltipItem.index]}: ${data['datasets'][0]['__custom_meta']['prefix']}${tooltipItem.yLabel.toLocaleString()}${data['datasets'][0]['__custom_meta']['suffix']}`;\n                        }\n                      }\n                    }\n                }                \n\n                chartOptions.options.responsive = true;\n\n                if ( chartEl.dataset.colorScheme && ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ){\n                    chartOptions.data.datasets.forEach( function( dataset, index ){\n                        dataset.hoverBorderWidth = 4;\n                        dataset.hoverBorderColor = ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][index] ) );\n                        dataset.borderWidth = 4;\n                    } );\n\n                }\n\n                break;\n            case 'pie':\n            case 'doughnut':\n            case 'polarArea':\n                for( let i = 0; i < dataRows; i++ ){\n                    if ( chartOptions.data && chartOptions.data.datasets[i] ){\n                        let selectedColorScheme;\n\n                        if ( chartEl.dataset.colorScheme ){\n                            if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][chartLabels.length] ){\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][chartLabels.length];\n                            } else {\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                            }\n\n                            chartOptions.data.datasets[i].backgroundColor = selectedColorScheme;\n                            chartOptions.data.datasets[i].hoverBorderColor = selectedColorScheme.map( function( color ){\n                                return ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( color ) );\n                            } );\n\n                            chartOptions.data.datasets[i].hoverBorderWidth = 4;\n                            chartOptions.data.datasets[i].borderWidth = 4;\n                        }\n                    }\n                }\n\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    title: function(tooltipItem, data) {\n                        return data['labels'][tooltipItem[0]['index']];\n                    },\n                    label: function( tooltipItem, data ) {\n                        return data['datasets'][0]['__custom_meta']['prefix'] + parseInt( data['datasets'][0]['data'][tooltipItem['index']] ).toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                    }\n                  }\n                }\n\n                break;\n            case 'radar':\n                for( let i = 0; i < dataRows; i++ ){\n                    if ( chartOptions.data && chartOptions.data.datasets[i] ){\n                    \n\n                        let selectedColorScheme;\n\n                        if ( chartEl.dataset.colorScheme ){\n                            if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows] ){\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows];\n                            } else {\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                            }                        \n                            // chartOptions.data.datasets[i].fill = 'start';\n                            chartOptions.data.datasets[i].backgroundColor = ftfHelpers.convertHex( selectedColorScheme[i], 20 );\n                            chartOptions.data.datasets[i].borderColor = ftfHelpers.convertHex( selectedColorScheme[i], 40 );\n                            chartOptions.data.datasets[i].hoverBorderColor = ftfHelpers.convertHex( ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( selectedColorScheme[i] ) ), 40 );\n\n                            chartOptions.data.datasets[i].hoverBorderWidth = 4;\n                            chartOptions.data.datasets[i].borderWidth = 4;\n                        }\n                    }\n                }\n\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    title: function(tooltipItem, data) {\n                        return data['labels'][tooltipItem[0]['index']];\n                    },\n                    label: function( tooltipItem, data ) {\n                        return data['datasets'][0]['__custom_meta']['prefix'] + parseInt( data['datasets'][0]['data'][tooltipItem['index']] ).toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                    }\n                  }\n                }\n\n                break;\n            case 'scatter':\n            case 'scatter-dates':\n                const labelX = chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : '',\n                      labelY = chartOptions.data.datasets[0].label;\n\n                let selectedColorScheme;\n\n                if ( chartEl.dataset.colorScheme && chartOptions.data.datasets[0] ){\n                    if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows] ){\n                        selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows];\n                    } else {\n                        selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                    }\n\n\n                    chartOptions.data.datasets[0].backgroundColor = ftfHelpers.convertHex( selectedColorScheme[0], 20 );\n                    chartOptions.data.datasets[0].borderColor = ftfHelpers.convertHex( selectedColorScheme[0], 40 );\n                    chartOptions.data.datasets[0].hoverBorderColor = ftfHelpers.convertHex( ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( selectedColorScheme[0] ) ), 40 );\n                }\n\n                chartOptions.data.datasets[0].hoverBorderWidth = 4;\n                chartOptions.data.datasets[0].borderWidth = 4;\n\n                axesLabels = [{\n                    scaleLabel: {\n                        display: true,\n                        // labelString: chartEl.dataset.axisLabelData\n                        labelString: chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : ''\n                    },\n                    ticks: {\n                        // max: 3,\n                        // beginAtZero: true,\n                        // userCallback: function( value, index, values)  {\n                        //     return value.toLocaleString();\n                        // }\n                    }\n                }];\n\n                axesValues = [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: labelY\n                    },\n                    type: chartEl.dataset.logScale && chartEl.dataset.logScale === '1' ? 'logarithmic' : 'linear',\n                    ticks: {\n                        // beginAtZero: true,\n                        userCallback: function( value, index, values)  {\n                            return chartEl.dataset.prefix + value.toLocaleString() + chartEl.dataset.suffix;\n                        }\n                    }\n                }];   \n                \n                chartOptions.options.scales = {\n                    xAxes: axesValues,\n                    yAxes: axesLabels\n                };  \n\n                let datapoints = [];\n                chartOptions.data.labels.forEach( function( dataset, i ){\n\n                    let datapoint = { x: null, y: null };\n\n                    if ( datavizType === 'scatter-dates' ){\n                        chartOptions.type = 'scatter';\n                        chartOptions.options.scales = {\n                            'xAxes': [\n                                {\n                                   'type': 'time',\n                                   'position': 'bottom',\n                                   'ticks': {\n                                        beginAtZero: false,\n                                        stepSize: 10,\n                                        // TODO: Fix scatter plot date label, using default behavior for now. \n                                        // callback: (value) => {\n                                        //   return new Date( value ).toLocaleDateString( navigator.language, { month: 'long', year: 'numeric' } );\n                                        // },\n                                    }\n                                }\n                            ],\n                            yAxes: [\n                                {\n                                    ticks: {\n                                        beginAtZero: false,\n                                        display: false\n                                    },\n                                    scaleLabel: {\n                                        display: false,\n                                        // labelString: chartEl.dataset.axisLabelData\n                                        // labelString: chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : ''\n                                        // labelString: 'Day of the month'\n                                    },\n                                    minorTickInterval: null\n                                }\n                            ]\n                        };\n\n                        chartOptions.options.legend = {\n                            display: false\n                        };\n\n                        const d = new Date( chartOptions.data.labels[i] );\n                        datapoint.x = d;\n\n                        // Day of the month\n                        datapoint.y = d.getDate();\n\n                        // datapoint.y = i;\n                        // datapoint.y = 0;\n\n                    } else {\n                        datapoint.x = parseFloat( chartOptions.data.labels[i] );\n                        datapoint.y = parseFloat( chartOptions.data.datasets[0].data[i] );\n                    }\n\n                    datapoints.push( datapoint );\n                } );\n                chartOptions.data.datasets[0].data = datapoints;\n                chartOptions.data.datasets = [chartOptions.data.datasets[0]];\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    title: function(tooltipItem, data) {\n                      return new Date( data['labels'][tooltipItem[0]['index']] ).toLocaleDateString( navigator.language, { day: 'numeric', month: 'long', year: 'numeric' } );\n\n                    },\n                    label: function( tooltipItem, data ) {\n                        return chartEl.dataset.prefix + window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_raw[tooltipItem['index']] + chartEl.dataset.suffix;\n                    }\n                  }\n                }                \n                break;\n        }\n\n    }\n\n    if ( !chartEl.dataset.showGridlines || chartEl.dataset.showGridlines.toString() === 'false' ){\n        chartOptions.options.scales = chartOptions.options.scales  || {};\n        chartOptions.options.scales.xAxes = chartOptions.options.scales.xAxes  || [];\n        chartOptions.options.scales.yAxes = chartOptions.options.scales.yAxes  || [];\n\n        chartOptions.options.scales.xAxes.forEach( function( xAxis ){\n            xAxis.gridLines = {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: false,\n            };\n        } );\n\n        chartOptions.options.scales.yAxes.forEach( function( yAxis ){\n            yAxis.gridLines = {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: false,\n            };\n        } );\n    }\n    if ( chartEl.dataset.options ){\n        try{\n            chartOptions.options = eval( '(' + chartEl.dataset.options + ')' );\n        } catch( err ){ console.log( err ) /* noop */ }\n    }\n\n    if ( ftfHelpers.isMobile() ){\n        let svgBorder = chartEl.parentElement.querySelector( 'svg' );\n\n        if ( svgBorder ){\n            svgBorder.setAttribute( 'viewBox', '0 0 500 500' );\n            svgBorder.querySelector( 'path' ).setAttribute( 'd', 'M 0 0  H 500 V 500 H 0 L 0 0' );\n            svgBorder.querySelector( 'textPath' ).style.fontSize = '24px';\n        }\n        chartEl.height = chartEl.width;\n    }\n\n    if ( chartOptions ){\n        // console.log( 'rendering chart...', chartEl, chartOptions );\n        // console.log( 'data', chartOptions.data.datasets );\n\n        try{\n            let newChart = new Chart( chartEl, chartOptions );\n            if ( !ftfHelpers.isAdmin() ){\n                /* Chart.js accessibility via https://codepen.io/kurkle/pen/WNrwjMp */\n\n                let selectedIndex = -1;\n                const meta = newChart.getDatasetMeta( 0 );\n\n                function clearActive() {\n                    if (selectedIndex > -1) {\n                        meta.controller.removeHoverStyle( meta.data[selectedIndex], 0, selectedIndex );\n                    }\n                }\n\n                function activate() {\n                    meta.controller.setHoverStyle( meta.data[selectedIndex], 0, selectedIndex );\n                    newChart.render();\n                }\n\n                function activateNext() {\n                    clearActive();\n                    selectedIndex = (selectedIndex + 1) % meta.data.length;\n                    activate();\n                }\n\n                function activatePrev() {\n                    clearActive();\n                    selectedIndex = ( selectedIndex || meta.data.length ) -1;\n                    activate();\n                }\n\n                chartEl.addEventListener( 'focus', function(){\n                    if (selectedIndex === -1) {\n                        activateNext();\n                    } else {\n                        activate();\n                    }\n                } );\n\n                chartEl.addEventListener( 'blur', function(){\n                    clearActive();\n                    newChart.render();\n                } );\n\n                chartEl.addEventListener( 'keydown', function( e ) {\n                    if ( e.key === 'ArrowRight' ) {\n                        activateNext();\n                    } else if ( e.key === 'ArrowLeft' ) {\n                        activatePrev();\n                    }\n                } );\n            }\n        } catch( err ){ /* noop */ }\n    }\n}\n\nwindow.ftfHelpers.isAdmin = function(){\n    const wpAdmin = document.getElementsByClassName( 'wp-admin' );\n    return wpAdmin && wpAdmin.length;\n}\n\nready( function(){\n    let charts = document.getElementsByClassName( 'ftf-dataviz-chart' );\n    Array.from( charts ).forEach( function( chartEl ){\n        ftfHelpers.renderChart( chartEl );\n    } );\n    let sliders = document.querySelectorAll( '.ftf-dataviz-slider-container' );\n\n    for ( const slider of sliders ) {\n      slider.addEventListener( 'input', function( ev ){\n        const dataVizEl = ev.target.closest( '.ftf-dataviz' );\n\n        // console.log( 'dataVizEl', dataVizEl );\n        // console.log( 'ev.target', ev.target );\n        // console.log( 'ev.target.dataset.data', ev.target.dataset.data );\n\n        dataVizEl.querySelector( '.ftf-dataviz-slider-title' ).innerHTML = ev.target.value;\n\n        const mapData = JSON.parse( ev.target.dataset.data );\n        const dataIndex = ev.target.value - ev.target.min;\n\n        let datapoints = {};\n\n        mapData.forEach( function( datapoint ){\n            datapoints[datapoint[0]] = datapoint[dataIndex+1]\n        } );\n\n        // console.log( 'datapoints', datapoints );\n\n        for ( const dataRow in datapoints ){\n            if ( dataRow && dataRow.length > 0 ){\n\n                let value;\n\n                if ( datapoints[dataRow] ){\n                    value = ev.target.dataset.prefix + datapoints[dataRow] + ev.target.dataset.suffix;\n                } else {\n                    value = datapoints[dataRow];\n                }\n\n                dataVizEl.querySelector( `rect.state.${ dataRow }` ).parentElement.querySelectorAll('text')[1].textContent = value;\n            }\n        }\n\n        // console.log( {\n        //     min: ev.target.min,\n        //     max: ev.target.max,\n        //     value: ev.target.value,\n        //     index: dataIndex,\n        //     prefix: ev.target.dataset.prefix,\n        //     suffix: ev.target.dataset.suffix,\n        //     data: mapData\n        // } );\n      } );\n    }\n} );\n\n// document.querySelector( 'rect.state.NY' );"]}