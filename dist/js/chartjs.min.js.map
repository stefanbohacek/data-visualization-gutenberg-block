{"version":3,"sources":["chartjs.js"],"names":["window","ready","fn","document","readyState","addEventListener","ftfHelpers","isMobile","a","check","navigator","userAgent","vendor","opera","test","substr","sortUnique","arr","sort","filter","el","i","indexOf","convertHex","hex","opacity","replace","sorted","substring","parseInt","p","c0","c1","l","r","g","b","P","f","t","m","Math","round","this","pSBCr","d","n","length","x","_d2","_slicedToArray","split","slice","parseFloat","h","result","pow","pSBC","toString","undefined","invertColor","bw","padZero","str","len","Array","join","renderChart","chartEl","chartOptions","gridLines","dataset","config","err","console","log","chartData","datavizType","type","sourceId","chartLabels","JSON","parse","stringify","ftfDataviz","data_labels_raw","data_series_raw","data_labels","data_series","data_labels_sorted","data_series_sorted","ignoreNull","datapoints","indexOuter","removeDatapoint","datapoint","indexInner","item","limit","axesLabels","axesValues","label","index","axis_label_values","dataArray","push","forEach","prefix","suffix","colorScheme","colorPalettes","dataRows","borderColor","columnFilter","datasets","data","__custom_meta","backgroundColor","scaleLabel","labelString","axis_label_title","ticks","beginAtZero","display","logScale","min","maxTicksLimit","userCallback","value","toLocaleString","_chartObj$ticks","dataValues","concat","apply","map","v","floor","chartObj","splice","_toConsumableArray","isAdmin","options","scales","xAxes","yAxes","callbacks","tooltipItem","xLabel","tooltips","title","datasetIndex","labels","yLabel","responsive","hoverBorderWidth","hoverBorderColor","selectedColorScheme","Object","keys","color","borderWidth","labelY","y","position","minorTickInterval","legend","Date","getDate","toLocaleDateString","language","day","month","year","showGridlines","xAxis","yAxis","drawBorder","drawOnChartArea","parentElement","querySelector","svgBorder","setAttribute","style","fontSize","width","Chart","clearActive","activatePrev","meta","selectedIndex","controller","removeHoverStyle","setHoverStyle","render","height","activate","newChart","getDatasetMeta","activateNext","e","key","getElementsByClassName","wpAdmin","_step","_iterator","_createForOfIteratorHelper","ev","target","closest","dataVizEl","innerHTML","mapData","dataIndex","dataRow","querySelectorAll","textContent"],"mappings":"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","file":"chartjs.min.js","sourcesContent":["'use strict';\n\nif (!window.ready){\n    window.ready = ( fn ) => {\n        if ( document.readyState != 'loading' ){\n            fn();\n        } else {\n            document.addEventListener( 'DOMContentLoaded', fn );\n        }\n    }\n}\n\n\nwindow.ftfHelpers = window.ftfHelpers || {};\n\nwindow.ftfHelpers.isMobile = function(){\n    var check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n    return check;\n}\n\nwindow.ftfHelpers.sortUnique = function( arr ){\n    var sorted = arr;\n\n    // var cnts = sorted.reduce( function (obj, val) {\n    //     obj[val] = (obj[val] || 0) + 1;\n    //     return obj;\n    // }, {} );\n\n    // var sorted = Object.keys(cnts).sort( function(a,b) {\n    //     return cnts[b] - cnts[a];\n    // });\n\n    return sorted.sort().filter(function(el,i,a){return i===a.indexOf(el)})\n    // return sorted;\n}\n\nwindow.ftfHelpers.convertHex = function( hex, opacity ){\n    /* https://gist.github.com/danieliser/b4b24c9f772066bcf0a6 */\n    if (!hex){\n        hex = '#000000';\n    }\n\n    hex = hex.replace( '#','' );\n\n    let r, g, b;\n\n    r = parseInt( hex.substring( 0,2 ), 16 );\n    g = parseInt( hex.substring( 2,4 ), 16 );\n    b = parseInt( hex.substring( 4,6 ), 16 );\n\n    let result = 'rgba(' + r + ',' + g + ',' + b + ',' + opacity / 100 + ')';\n    return result;\n}\n\nwindow.ftfHelpers.pSBC = function(p,c0,c1,l){\n    let r,g,b,P,f,t,h,i=parseInt,m=Math.round,a=typeof(c1)==\"string\";\n    if(typeof(p)!=\"number\"||p<-1||p>1||typeof(c0)!=\"string\"||(c0[0]!='r'&&c0[0]!='#')||(c1&&!a))return null;\n    if(!this.pSBCr)this.pSBCr=(d)=>{\n        let n=d.length,x={};\n        if(n>9){\n            [r,g,b,a]=d=d.split(\",\"),n=d.length;\n            if(n<3||n>4)return null;\n            x.r=i(r[3]==\"a\"?r.slice(5):r.slice(4)),x.g=i(g),x.b=i(b),x.a=a?parseFloat(a):-1\n        }else{\n            if(n==8||n==6||n<4)return null;\n            if(n<6)d=\"#\"+d[1]+d[1]+d[2]+d[2]+d[3]+d[3]+(n>4?d[4]+d[4]:\"\");\n            d=i(d.slice(1),16);\n            if(n==9||n==5)x.r=d>>24&255,x.g=d>>16&255,x.b=d>>8&255,x.a=m((d&255)/0.255)/1000;\n            else x.r=d>>16,x.g=d>>8&255,x.b=d&255,x.a=-1\n        }return x};\n    h=c0.length>9,h=a?c1.length>9?true:c1==\"c\"?!h:false:h,f=this.pSBCr(c0),P=p<0,t=c1&&c1!=\"c\"?this.pSBCr(c1):P?{r:0,g:0,b:0,a:-1}:{r:255,g:255,b:255,a:-1},p=P?p*-1:p,P=1-p;\n    if(!f||!t)return null;\n    if(l)r=m(P*f.r+p*t.r),g=m(P*f.g+p*t.g),b=m(P*f.b+p*t.b);\n    else r=m((P*f.r**2+p*t.r**2)**0.5),g=m((P*f.g**2+p*t.g**2)**0.5),b=m((P*f.b**2+p*t.b**2)**0.5);\n    a=f.a,t=t.a,f=a>=0||t>=0,a=f?a<0?t:t<0?a:a*P+t*p:0;\n    if(h)return\"rgb\"+(f?\"a(\":\"(\")+r+\",\"+g+\",\"+b+(f?\",\"+m(a*1000)/1000:\"\")+\")\";\n    else return\"#\"+(4294967296+r*16777216+g*65536+b*256+(f?m(a*255):0)).toString(16).slice(1,f?undefined:-2)\n}\n\nwindow.ftfHelpers.invertColor = function( hex, bw ) {\n    if ( !hex ){\n        return null;\n    }\n    if ( hex.indexOf( '#' ) === 0 ) {\n        hex = hex.slice( 1 );\n    }\n\n    if ( hex.length === 3 ) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n\n    var r = parseInt( hex.slice( 0, 2 ), 16 ),\n        g = parseInt( hex.slice( 2, 4 ), 16 ),\n        b = parseInt( hex.slice( 4, 6 ), 16 );\n\n    if ( bw ) {\n        return ( r * 0.299 + g * 0.587 + b * 0.114 ) > 186\n            ? '#000000'\n            : '#FFFFFF';\n    }\n\n    r = ( 255 - r ).toString( 16 );\n    g = ( 255 - g ).toString( 16 );\n    b = ( 255 - b ).toString( 16 );\n\n    return '#' + ftfHelpers.padZero( r ) + ftfHelpers.padZero( g ) + ftfHelpers.padZero( b );\n}\n\nwindow.ftfHelpers.padZero = function( str, len ) {\n    len = len || 2;\n    var zeros = new Array( len ).join( '0' );\n    return ( zeros + str ).slice( -len );\n}\n\nwindow.ftfHelpers.renderChart = function( chartEl ){\n    if ( !chartEl ){ return false; }\n\n    let chartOptions = {};\n\n    if ( chartEl.dataset.config ){\n        try{\n            // chartOptions = JSON.parse( chartEl.dataset.config );\n            chartOptions = eval( '(' + chartEl.dataset.config + ')' );\n        } catch( err ){ console.log( err ) /* noop */ }\n    } else{\n        let colorSchemeIndex = 3;\n        let datavizType = chartEl.dataset.type || 'bar';\n\n        let chartLabels, chartData;\n        if ( chartEl.dataset.sourceId ){\n            if ( datavizType === 'scatter' ){\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_raw ) );\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series_raw ) );\n            }\n            else if ( datavizType === 'scatter-dates' ){\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_raw ) );\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series_raw ) );\n            }\n            else if ( chartEl.dataset.sort && ( chartEl.dataset.sort === 'true' || chartEl.dataset.sort == 1 ) ){\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_sorted ) );\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series_sorted ) );\n            } else {\n                chartLabels = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels ) );\n                chartData = JSON.parse( JSON.stringify( window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_series ) );\n            }            \n        }\n\n        if ( chartEl.dataset.ignoreNull && chartEl.dataset.ignoreNull === 'true' ){\n\n            chartData.forEach( function( datapoints, indexOuter ){\n                let removeDatapoint = true;\n\n                datapoints.forEach( function( datapoint, indexInner ){\n                    if ( chartData[indexOuter][indexInner] && parseInt( chartData[indexOuter][indexInner] ) !== 0 ){\n                        removeDatapoint = false;\n                    }\n                } );\n\n                if ( removeDatapoint ){\n                    delete chartData[indexOuter];\n                    delete chartLabels[indexOuter];\n                }\n            } );\n\n            chartData = chartData.filter( function ( item ){ return item != undefined } );\n            chartLabels = chartLabels.filter( function ( item ){ return item != undefined } );\n        }\n\n\n        if ( chartEl.dataset.sort && ( chartEl.dataset.sort === 'true' || chartEl.dataset.sort == 1 ) && chartEl.dataset.limit ){\n            chartLabels = chartLabels.slice( 0, chartEl.dataset.limit );\n            chartData = chartData.slice( 0, chartEl.dataset.limit );\n        }\n\n        if ( chartData && chartData.length > 3 ){\n            colorSchemeIndex = chartData.length;\n        }\n\n        const dataRows = chartData ? chartData[0].length : 0;\n        let datasets = [];\n\n        for( let i = 0; i < dataRows; i++ ){\n            let dataArray = [];\n            let label = '';\n\n            chartData.forEach( function( data, index ){\n                if ( chartEl.dataset.sourceId ){\n                    label = window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_values[i];                    \n                }\n\n                // const label = chartData[i][index];\n                dataArray.push( chartData[index][i] );\n            } );\n\n            let dataset = {\n                label: label,\n                data: dataArray,\n                __custom_meta: {\n                    prefix: chartEl.dataset.prefix,\n                    suffix: chartEl.dataset.suffix\n                }\n            };\n\n            if ( chartEl.dataset.colorScheme ){\n                if ( chartEl.dataset.colorScheme && ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ){\n                    if ( [ 'bar', 'horizontalBar' ].indexOf( datavizType ) !== -1 ){\n                        dataset.backgroundColor = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][i];\n                    } else if ( datavizType === 'line' ){\n                        dataset.borderColor = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][i];\n                        dataset.fill = false;\n                    }\n                }\n\n            }\n\n            datasets.push( dataset );\n        }\n\n        if ( chartEl.dataset.columnFilter && chartEl.dataset.columnFilter === 'true' ){\n            for ( let i = 1; i < datasets.length; i++ ){\n                let selectHtml = `<label>${datasets[i].label}\n                    <select name=\"ftf-dataviz-filter-${ chartEl.dataset.sourceId }\" id=\"ftf-dataviz-filter-${ chartEl.dataset.sourceId }\">\n                      ${\n                        datasets[i].data.map( function( data ){\n                            return `<option value=\"option\">option</option>`;\n                        } )\n                      }\n                    </select>\n                </label>`; \n            }\n        \n            datasets = [datasets[0]];\n        }\n\n        chartOptions = {\n            type: datavizType,\n            data: {\n                labels: chartLabels,\n                datasets: datasets\n            },\n            options: {}\n        };\n\n        let axesLabels, axesValues;\n\n        switch ( datavizType ){\n            case 'horizontalBar':\n            case 'bar':\n            case 'line':\n                axesLabels = [{\n                    scaleLabel: {\n                        display: true,\n                        // labelString: chartEl.dataset.axisLabelData\n                        labelString: chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : ''\n                    },\n                    ticks: {\n                        beginAtZero: true,\n                        // userCallback: function( value, index, values)  {\n                        //     return value.toLocaleString();\n                        // }\n                    }\n                }];\n\n                axesValues = [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: chartEl.dataset.label\n                    },\n                    type: chartEl.dataset.logScale && chartEl.dataset.logScale === '1' ? 'logarithmic' : 'linear',\n                    ticks: {\n                        beginAtZero: true,\n                        autoSkip: true,\n                        min: 0,\n                        maxTicksLimit: 10,\n                        userCallback: function( value, index, values)  {\n                            return chartEl.dataset.prefix + value.toLocaleString() + chartEl.dataset.suffix;\n                        }\n                    },\n                    afterBuildTicks: (chartObj) => {\n                        if ( chartEl.dataset.logScale && chartEl.dataset.logScale === '1' ){\n                            const dataValues = [].concat.apply( [], datasets.map( function( datapoint ){\n                                return datapoint.data;\n                            } ) ).map( function( v ){\n                                return Math.pow( 10, Math.floor( v ).toString().length - 1 );\n                            } );\n\n                            if ( ftfHelpers.isMobile() ){\n                                chartObj.ticks.splice(0, chartObj.ticks.length);\n                            }\n                            \n                            chartObj.ticks.push(...dataValues);\n                            chartObj.ticks = ftfHelpers.sortUnique( chartObj.ticks );                            \n                        }\n                    }                    \n                }];\n\n                if ( chartEl.dataset.logScale && chartData.length > 4 ){\n                    /* Temporary fix for labels overlapping when using logarithmic scale. */\n                    // axesValues[0].ticks.minRotation = 30;\n                    axesValues[0].ticks.maxTicksLimit = chartData.length * 2;\n                }\n\n                if ( ftfHelpers.isAdmin() ){\n                    // axesValues[0].ticks.maxTicksLimit = chartData.length;\n                    axesValues[0].ticks.maxTicksLimit = 4;\n                }\n\n                if ( datavizType === 'horizontalBar' ){\n                    chartOptions.options.scales = {\n                        xAxes: axesValues,\n                        yAxes: axesLabels\n                    };\n\n                    chartOptions.options.tooltips = {\n                      callbacks: {\n                        label: function( tooltipItem, data ) {\n                            return data['datasets'][0]['__custom_meta']['prefix'] + tooltipItem.xLabel.toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                        }\n                      }\n                    }\n\n                } else {\n                    chartOptions.options.scales = {\n                        xAxes: axesLabels,\n                        yAxes: axesValues\n                    };\n\n                    chartOptions.options.tooltips = {\n                      callbacks: {\n                        title: function(tooltipItem, data) {\n                            return data.datasets[tooltipItem[0].datasetIndex].label;\n                        },\n                        label: function( tooltipItem, data ) {\n                            return `${data.labels[tooltipItem.index]}: ${data['datasets'][0]['__custom_meta']['prefix']}${tooltipItem.yLabel.toLocaleString()}${data['datasets'][0]['__custom_meta']['suffix']}`;\n                        }\n                      }\n                    }\n                }                \n\n                chartOptions.options.responsive = true;\n\n                if ( chartEl.dataset.colorScheme && ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ){\n                    chartOptions.data.datasets.forEach( function( dataset, index ){\n                        dataset.hoverBorderWidth = 4;\n                        dataset.hoverBorderColor = ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows+3][index] ) );\n                        dataset.borderWidth = 4;\n                    } );\n\n                }\n\n                break;\n            case 'pie':\n            case 'doughnut':\n            case 'polarArea':\n                for( let i = 0; i < dataRows; i++ ){\n                    if ( chartOptions.data && chartOptions.data.datasets[i] ){\n                        let selectedColorScheme;\n\n                        if ( chartEl.dataset.colorScheme ){\n                            if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][chartLabels.length] ){\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][chartLabels.length];\n                            } else {\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                            }\n\n                            chartOptions.data.datasets[i].backgroundColor = selectedColorScheme;\n                            chartOptions.data.datasets[i].hoverBorderColor = selectedColorScheme.map( function( color ){\n                                return ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( color ) );\n                            } );\n\n                            chartOptions.data.datasets[i].hoverBorderWidth = 4;\n                            chartOptions.data.datasets[i].borderWidth = 4;\n                        }\n                    }\n                }\n\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    title: function(tooltipItem, data) {\n                        return data['labels'][tooltipItem[0]['index']];\n                    },\n                    label: function( tooltipItem, data ) {\n                        return data['datasets'][0]['__custom_meta']['prefix'] + parseInt( data['datasets'][0]['data'][tooltipItem['index']] ).toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                    }\n                  }\n                }\n\n                break;\n            case 'radar':\n                for( let i = 0; i < dataRows; i++ ){\n                    if ( chartOptions.data && chartOptions.data.datasets[i] ){\n                    \n\n                        let selectedColorScheme;\n\n                        if ( chartEl.dataset.colorScheme ){\n                            if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows] ){\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows];\n                            } else {\n                                selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                            }                        \n                            // chartOptions.data.datasets[i].fill = 'start';\n                            chartOptions.data.datasets[i].backgroundColor = ftfHelpers.convertHex( selectedColorScheme[i], 20 );\n                            chartOptions.data.datasets[i].borderColor = ftfHelpers.convertHex( selectedColorScheme[i], 40 );\n                            chartOptions.data.datasets[i].hoverBorderColor = ftfHelpers.convertHex( ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( selectedColorScheme[i] ) ), 40 );\n\n                            chartOptions.data.datasets[i].hoverBorderWidth = 4;\n                            chartOptions.data.datasets[i].borderWidth = 4;\n                        }\n                    }\n                }\n\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    title: function(tooltipItem, data) {\n                        return data['labels'][tooltipItem[0]['index']];\n                    },\n                    label: function( tooltipItem, data ) {\n                        return data['datasets'][0]['__custom_meta']['prefix'] + parseInt( data['datasets'][0]['data'][tooltipItem['index']] ).toLocaleString() + data['datasets'][0]['__custom_meta']['suffix'];\n                    }\n                  }\n                }\n\n                break;\n            case 'scatter':\n            case 'scatter-dates':\n                const labelX = chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : '',\n                      labelY = chartOptions.data.datasets[0].label;\n\n                let selectedColorScheme;\n\n                if ( chartEl.dataset.colorScheme && chartOptions.data.datasets[0] ){\n                    if ( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows] ){\n                        selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][dataRows];\n                    } else {\n                        selectedColorScheme = ftfHelpers.colorPalettes[chartEl.dataset.colorScheme][Object.keys( ftfHelpers.colorPalettes[chartEl.dataset.colorScheme] ).length - 3];\n                    }\n\n\n                    chartOptions.data.datasets[0].backgroundColor = ftfHelpers.convertHex( selectedColorScheme[0], 20 );\n                    chartOptions.data.datasets[0].borderColor = ftfHelpers.convertHex( selectedColorScheme[0], 40 );\n                    chartOptions.data.datasets[0].hoverBorderColor = ftfHelpers.convertHex( ftfHelpers.pSBC( -0.05, ftfHelpers.invertColor( selectedColorScheme[0] ) ), 40 );\n                }\n\n                chartOptions.data.datasets[0].hoverBorderWidth = 4;\n                chartOptions.data.datasets[0].borderWidth = 4;\n\n                axesLabels = [{\n                    scaleLabel: {\n                        display: true,\n                        // labelString: chartEl.dataset.axisLabelData\n                        labelString: chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : ''\n                    },\n                    ticks: {\n                        // max: 3,\n                        // beginAtZero: true,\n                        // userCallback: function( value, index, values)  {\n                        //     return value.toLocaleString();\n                        // }\n                    }\n                }];\n\n                axesValues = [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: labelY\n                    },\n                    type: chartEl.dataset.logScale && chartEl.dataset.logScale === '1' ? 'logarithmic' : 'linear',\n                    ticks: {\n                        // beginAtZero: true,\n                        userCallback: function( value, index, values)  {\n                            return chartEl.dataset.prefix + value.toLocaleString() + chartEl.dataset.suffix;\n                        }\n                    }\n                }];   \n                \n                chartOptions.options.scales = {\n                    xAxes: axesValues,\n                    yAxes: axesLabels\n                };  \n\n                let datapoints = [];\n                chartOptions.data.labels.forEach( function( dataset, i ){\n\n                    let datapoint = { x: null, y: null };\n\n                    if ( datavizType === 'scatter-dates' ){\n                        chartOptions.type = 'scatter';\n                        chartOptions.options.scales = {\n                            'xAxes': [\n                                {\n                                   'type': 'time',\n                                   'position': 'bottom',\n                                   'ticks': {\n                                        beginAtZero: false,\n                                        stepSize: 10,\n                                        // TODO: Fix scatter plot date label, using default behavior for now. \n                                        // callback: (value) => {\n                                        //   return new Date( value ).toLocaleDateString( navigator.language, { month: 'long', year: 'numeric' } );\n                                        // },\n                                    }\n                                }\n                            ],\n                            yAxes: [\n                                {\n                                    ticks: {\n                                        beginAtZero: false,\n                                        display: false\n                                    },\n                                    scaleLabel: {\n                                        display: false,\n                                        // labelString: chartEl.dataset.axisLabelData\n                                        // labelString: chartEl.dataset.sourceId ? window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].axis_label_title : ''\n                                        // labelString: 'Day of the month'\n                                    },\n                                    minorTickInterval: null\n                                }\n                            ]\n                        };\n\n                        chartOptions.options.legend = {\n                            display: false\n                        };\n\n                        const d = new Date( chartOptions.data.labels[i] );\n                        datapoint.x = d;\n\n                        // Day of the month\n                        datapoint.y = d.getDate();\n\n                        // datapoint.y = i;\n                        // datapoint.y = 0;\n\n                    } else {\n                        datapoint.x = parseFloat( chartOptions.data.labels[i] );\n                        datapoint.y = parseFloat( chartOptions.data.datasets[0].data[i] );\n                    }\n\n                    datapoints.push( datapoint );\n                } );\n                chartOptions.data.datasets[0].data = datapoints;\n                chartOptions.data.datasets = [chartOptions.data.datasets[0]];\n                chartOptions.options.tooltips = {\n                  callbacks: {\n                    title: function(tooltipItem, data) {\n                      return new Date( data['labels'][tooltipItem[0]['index']] ).toLocaleDateString( navigator.language, { day: 'numeric', month: 'long', year: 'numeric' } );\n\n                    },\n                    label: function( tooltipItem, data ) {\n                        return chartEl.dataset.prefix + window.ftfDataviz[parseInt( chartEl.dataset.sourceId )].data_labels_raw[tooltipItem['index']] + chartEl.dataset.suffix;\n                    }\n                  }\n                }                \n                break;\n        }\n\n    }\n\n    if ( !chartEl.dataset.showGridlines || chartEl.dataset.showGridlines.toString() === 'false' ){\n        chartOptions.options.scales = chartOptions.options.scales  || {};\n        chartOptions.options.scales.xAxes = chartOptions.options.scales.xAxes  || [];\n        chartOptions.options.scales.yAxes = chartOptions.options.scales.yAxes  || [];\n\n        chartOptions.options.scales.xAxes.forEach( function( xAxis ){\n            xAxis.gridLines = {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: false,\n            };\n        } );\n\n        chartOptions.options.scales.yAxes.forEach( function( yAxis ){\n            yAxis.gridLines = {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: false,\n            };\n        } );\n    }\n    if ( chartEl.dataset.options ){\n        try{\n            chartOptions.options = eval( '(' + chartEl.dataset.options + ')' );\n        } catch( err ){ console.log( err ) /* noop */ }\n    }\n\n    if ( ftfHelpers.isMobile() ){\n        let svgBorder = chartEl.parentElement.querySelector( 'svg' );\n\n        if ( svgBorder ){\n            svgBorder.setAttribute( 'viewBox', '0 0 500 500' );\n            svgBorder.querySelector( 'path' ).setAttribute( 'd', 'M 0 0  H 500 V 500 H 0 L 0 0' );\n            svgBorder.querySelector( 'textPath' ).style.fontSize = '24px';\n        }\n        chartEl.height = chartEl.width;\n    }\n\n    if ( chartOptions ){\n        // console.log( 'rendering chart...', chartEl, chartOptions );\n        // console.log( 'data', chartOptions.data.datasets );\n\n        try{\n            let newChart = new Chart( chartEl, chartOptions );\n            if ( !ftfHelpers.isAdmin() ){\n                /* Chart.js accessibility via https://codepen.io/kurkle/pen/WNrwjMp */\n\n                let selectedIndex = -1;\n                const meta = newChart.getDatasetMeta( 0 );\n\n                function clearActive() {\n                    if (selectedIndex > -1) {\n                        meta.controller.removeHoverStyle( meta.data[selectedIndex], 0, selectedIndex );\n                    }\n                }\n\n                function activate() {\n                    meta.controller.setHoverStyle( meta.data[selectedIndex], 0, selectedIndex );\n                    newChart.render();\n                }\n\n                function activateNext() {\n                    clearActive();\n                    selectedIndex = (selectedIndex + 1) % meta.data.length;\n                    activate();\n                }\n\n                function activatePrev() {\n                    clearActive();\n                    selectedIndex = ( selectedIndex || meta.data.length ) -1;\n                    activate();\n                }\n\n                chartEl.addEventListener( 'focus', function(){\n                    if (selectedIndex === -1) {\n                        activateNext();\n                    } else {\n                        activate();\n                    }\n                } );\n\n                chartEl.addEventListener( 'blur', function(){\n                    clearActive();\n                    newChart.render();\n                } );\n\n                chartEl.addEventListener( 'keydown', function( e ) {\n                    if ( e.key === 'ArrowRight' ) {\n                        activateNext();\n                    } else if ( e.key === 'ArrowLeft' ) {\n                        activatePrev();\n                    }\n                } );\n            }\n        } catch( err ){ /* noop */ }\n    }\n}\n\nwindow.ftfHelpers.isAdmin = function(){\n    const wpAdmin = document.getElementsByClassName( 'wp-admin' );\n    return wpAdmin && wpAdmin.length;\n}\n\nready( function(){\n    let charts = document.getElementsByClassName( 'ftf-dataviz-chart' );\n    Array.from( charts ).forEach( function( chartEl ){\n        ftfHelpers.renderChart( chartEl );\n    } );\n    let sliders = document.querySelectorAll( '.ftf-dataviz-slider-container' );\n\n    for ( const slider of sliders ) {\n      slider.addEventListener( 'input', function( ev ){\n        const dataVizEl = ev.target.closest( '.ftf-dataviz' );\n\n        // console.log( 'dataVizEl', dataVizEl );\n        // console.log( 'ev.target', ev.target );\n        // console.log( 'ev.target.dataset.data', ev.target.dataset.data );\n\n        dataVizEl.querySelector( '.ftf-dataviz-slider-title' ).innerHTML = ev.target.value;\n\n        const mapData = JSON.parse( ev.target.dataset.data );\n        const dataIndex = ev.target.value - ev.target.min;\n\n        let datapoints = {};\n\n        mapData.forEach( function( datapoint ){\n            datapoints[datapoint[0]] = datapoint[dataIndex+1]\n        } );\n\n        // console.log( 'datapoints', datapoints );\n\n        for ( const dataRow in datapoints ){\n            if ( dataRow && dataRow.length > 0 ){\n\n                let value;\n\n                if ( datapoints[dataRow] ){\n                    value = ev.target.dataset.prefix + datapoints[dataRow] + ev.target.dataset.suffix;\n                } else {\n                    value = datapoints[dataRow];\n                }\n\n                dataVizEl.querySelector( `rect.state.${ dataRow }` ).parentElement.querySelectorAll('text')[1].textContent = value;\n            }\n        }\n\n        // console.log( {\n        //     min: ev.target.min,\n        //     max: ev.target.max,\n        //     value: ev.target.value,\n        //     index: dataIndex,\n        //     prefix: ev.target.dataset.prefix,\n        //     suffix: ev.target.dataset.suffix,\n        //     data: mapData\n        // } );\n      } );\n    }\n} );\n\n// document.querySelector( 'rect.state.NY' );"]}